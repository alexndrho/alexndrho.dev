---
import { FaRegPaperPlane } from 'react-icons/fa';
import styles from '../../styles/sections/Contact.module.css';
---

<section id="contact">
  <div class="container container--section">
    <h2>Contact</h2>

    <p>
      Get in touch with me directly on{' '}
      <a href="mailto: ho.alexander.g@gmail.com" class={styles.contact__link}>
        ho.alexander.g@gmail.com
      </a>{' '}
      or send me a message
    </p>

    {/* Netlify Form */}
    <form
      data-netlify="true"
      name="contact"
      action="POST"
      class={styles.contact__form}
      data-form-contact
    >
      <input type="hidden" name="form-name" value="contact" />

      <input
        type="text"
        name="name"
        id="name"
        placeholder="Name"
        class={`${styles.contact__input} input input--primary`}
        required
        data-form-input-name
      />

      <input
        type="email"
        name="email"
        id="email"
        placeholder="Email"
        class={`${styles.contact__input} input input--primary`}
        required
        data-form-input-email
      />

      <textarea
        name="message"
        id="message"
        placeholder="Message"
        class={`${styles.contact__textarea} input input--primary`}
        rows={8}
        required
        data-form-input-message></textarea>

      <button type="submit" class="btn btn--primary btn--dashed-effect">
        Send Message
        <FaRegPaperPlane />
      </button>
    </form>
  </div>
</section>

<script>
  import { toast } from 'react-toastify';

  const form: HTMLFormElement | null = document.querySelector(
    '[data-form-contact]'
  );
  const inputName: HTMLInputElement | null = document.querySelector(
    '[data-form-input-name]'
  );
  const inputEmail: HTMLInputElement | null = document.querySelector(
    '[data-form-input-email]'
  );
  const inputMessage: HTMLTextAreaElement | null = document.querySelector(
    '[data-form-input-message]'
  );

  const resetForm = () => {
    if (!(inputName && inputEmail && inputMessage)) return;

    inputName.value = '';
    inputEmail.value = '';
    inputMessage.value = '';
  };

  const formSubmit = async (e: Event) => {
    e.preventDefault();

    const formData = new FormData(form as HTMLFormElement | undefined);

    const onSuccess = (message: string) => toast(message, { type: 'success' });
    const onError = (message: string) => toast(message, { type: 'error' });

    try {
      const response = await fetch('/', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams(formData as any).toString(),
      });

      if (!response.ok) throw new Error('Error sending message');

      onSuccess('Message sent successfully');
      resetForm();
    } catch (error) {
      onError('Error sending message');
      console.error(error);
    }
  };

  form?.addEventListener('submit', formSubmit);
</script>
